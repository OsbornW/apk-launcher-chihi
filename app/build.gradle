plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

import com.google.gson.Gson

import java.nio.charset.StandardCharsets
import java.security.MessageDigest


def createPath(file) {
    if (!file.exists()) {
        file.mkdirs()
    }
}

def calculateMD5(File file) {
    MessageDigest digest = MessageDigest.getInstance("MD5")
    file.withInputStream { is ->
        byte[] buffer = new byte[8192]
        int read = 0
        while ((read = is.read(buffer)) > 0) {
            digest.update(buffer, 0, read)
        }
    }
    byte[] md5sum = digest.digest()
    // 将每个字节转为两位16进制字符
    return md5sum.collect { String.format("%02x", it) }.join()
}

android {

    signingConfigs {
        hongxin {
            storeFile file("platform_H713.keystore")
            storePassword "android"
            keyAlias "platform"
            keyPassword "android"
        }


        hongxin_rk3326 {
            storeFile file("platform_rk3326.keystore")
            storePassword "android"
            keyAlias "platform"
            keyPassword "android"
        }

        yxt {
            storeFile file("yxt_X98K_10.keystore")
            //storeFile file("platform_X98K_301.keystore")
            storePassword "android"
            keyAlias "platform"
            keyPassword "android"
        }



        x88 {
            storeFile file("platform_x88.keystore")
            storePassword "platform"
            keyAlias "platform"
            keyPassword "platform"
        }


        h713_normal {
            storeFile file("h713_normal.jks")
            storePassword "936429"
            keyAlias "chihi"
            keyPassword "936429"
        }


    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            //清理多余的图片资源或raw中没有用到的资源等，一般会和混淆同时使用(和混淆都可以起到一定程度apk瘦身的作用)
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.x88
            //signingConfig signingConfigs.debug
        }

        //打包应用
        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                // 设置 APK 文件名
                def value = getBuildConfigFieldValue(variant, "MODEL")
                def apkFileName1 = "Launcher_${versionName}_${getTime()}_${value[1..-2]}.apk"
                output.outputFileName = apkFileName1

                // 使用 taskGraph 判断是否为 assemble 任务
                gradle.taskGraph.whenReady { taskGraph ->
                    // 判断是否是 assemble 任务
                    if (taskGraph.hasTask(":app:assemble${variant.name.capitalize()}")) {
                        variant.assemble.doLast {
                            println("✅ assemble 任务执行，开始生成 readme.json")

                            // 在这里构建需要的 JSON 数据
                            def placeholders = variant.mergedFlavor.manifestPlaceholders
                            Map<String, String> data = new HashMap<>()
                            data.put("packageName", variant.applicationId)
                            data.put("versionName", variant.versionName)
                            data.put("version", variant.versionCode)
                            data.put("appId", getBuildConfigFieldValue(variant, "APP_ID")[1..-2])
                            data.put("channel", getBuildConfigFieldValue(variant, "CHANNEL")[1..-2])
                            data.put("chihi_type", getBuildConfigFieldValue(variant, "CHIHI_TYPE")[1..-2])
                            data.put("model", getBuildConfigFieldValue(variant, "MODEL")[1..-2])

                            // 计算 APK 文件的 MD5
                            def apkFile = new File(output.outputFile.parent, apkFileName1)

                            if (apkFile.exists()) {
                                data.put("md5", calculateMD5(apkFile))
                            } else {
                                throw new FileNotFoundException("APK 文件未找到: ${apkFile.absolutePath}")
                            }

                            // 生成 readme.json 文件
                            def fileName = "readme.json"
                            def dstFile = new File(apkFile.parentFile, fileName)
                            FileOutputStream fos = new FileOutputStream(dstFile)
                            def gson = new Gson()
                            def json = gson.toJson(data)
                            fos.write(json.getBytes(StandardCharsets.UTF_8))
                            fos.close()
                            println("✅ readme.json 文件已生成")
                        }
                    } else {
                        println("🚀 运行的是 `Run` 任务，跳过生成 JSON 文件的逻辑")
                    }
                }
            }
        }

    }

    namespace 'com.chihihx.launcher'
    compileSdk 34

    defaultConfig {
        applicationId "com.chihihx.launcher"
        minSdk 24
        targetSdk 34
        versionCode 57
        versionName "1.57"

        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "APP_ID", '"launcher"'

        /**
         *
         * 渠道名称
         * */
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713M_G", "\"${FLAVOR_NAME_LAUNCHER_713M_G}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713RK_M_G", "\"${FLAVOR_NAME_LAUNCHER_713RK_M_G}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713RK_M", "\"${FLAVOR_NAME_LAUNCHER_713RK_M}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_X98K_M", "\"${FLAVOR_NAME_LAUNCHER_X98K_M}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_P50", "\"${FLAVOR_NAME_LAUNCHER_P50}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713_SMARTTV", "\"${FLAVOR_NAME_LAUNCHER_713_SMARTTV}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713_TEST", "\"${FLAVOR_NAME_LAUNCHER_713_TEST}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_713M_G_2X", "\"${FLAVOR_NAME_LAUNCHER_713M_G_2X}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_X50", "\"${FLAVOR_NAME_LAUNCHER_X50}\""
        buildConfigField "String", "FLAVOR_NAME_LAUNCHER_X10", "\"${FLAVOR_NAME_LAUNCHER_X10}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a'
            //abiFilters 'armeabi-v7a','arm64-v8a'
            //abiFilters 'armeabi-v7a','x86','x86_64'
        }
    }

    // 源目录名字需要跟渠道名字对应，目录名字可以随意
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src/main/java']
        }


        p50_713M {
            java.srcDirs = ['src/p50_713m/java']
        }
        hongxin_713_M_G_2x{
            java.srcDirs = ['src/hongxin_713_M_G_2x/java']
        }

        hongxin_713_M_G_X10{
            java.srcDirs = ['src/hongxin_713_M_G_X10/java']
        }

        x50_713M{
            java.srcDirs = ['src/x50_713M/java']
        }
        hongxin_713_smartTV{
            java.srcDirs = ['src/hongxin_713_smartTV/java']
        }
    }



    flavorDimensions.add("chihi")

    productFlavors {
        // {  713M_G,P50_713M,713RK_M_G,713G------>0   }
        // {  aiboyou_projector------>1   }
        // {  aiboyou_tv------>2   }
        // {  aiboyou_launcher------>7   }
        // {  X98K------>3   }
        // {  H27002------>5   }
        // {  H6------>9   }


        //宏信(投影仪) 713M
        hongxin_713_M_G {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.hongxin
            versionCode 61      //2025-3-20发布版本号：61
            versionName "1.7.1"     //2025-3-20发布版本名：1.7.1
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "CHANNEL", '"LA27001"'
            buildConfigField "String", "CHIHI_TYPE", '"H713M"'
            buildConfigField "String", "MODEL", '"713M"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713M_G}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }

        hongxin_713_M_G_2x {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.hongxin
            versionCode 12      //2025-3-19发布版本号：12
            versionName "3.2.3"     //2025-3-19发布版本名：3.2.3
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            // buildConfigField "String", "APP_STORE_BASE_URL", '""'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"X30"'
            buildConfigField "String", "CHIHI_TYPE", '"H713M"'
            buildConfigField "String", "MODEL", '"713M"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713M_G_2X}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }

        hongxin_713_M_G_X10 {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            versionCode 7      //2025-3-19发布版本号：7
            versionName "1.3.5"     //2025-3-19发布版本名：1.3.5
            signingConfig signingConfigs.hongxin
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            // buildConfigField "String", "APP_STORE_BASE_URL", '""'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"X10"'
            buildConfigField "String", "CHIHI_TYPE", '"713MG_X10"'
            buildConfigField "String", "MODEL", '"713MG_X10"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_X10}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }


        p50_713M {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.hongxin
            versionCode 62      //2025-3-3发布版本号：62
            versionName "1.8.0"     //2025-3-3发布版本名：1.8.0
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            //buildConfigField "String", "APP_STORE_BASE_URL", '"https://as.keencloud.work/"'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"P50_H713M"'
            buildConfigField "String", "CHIHI_TYPE", '"P50_H713M"'
            buildConfigField "String", "MODEL", '"P50_713M"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_P50}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }

        x50_713M {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.x88
            versionCode 65     //2025-3-19发布版本号：65
            versionName "1.4.5"     //2025-3-19发布版本名：1.4.5
            manifestPlaceholders = [share_uid: "android.uid.system"]
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"X50"'
            buildConfigField "String", "CHIHI_TYPE", '"P50_H713M"'
            buildConfigField "String", "MODEL", '"P50_713M"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_X50}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }


        hongxin_713_smartTV {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.hongxin
            versionCode 2      //2025-3-3发布版本号：2
            versionName "1.1.0"     //2025-3-3发布版本名：1.1.0
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            buildConfigField "String", "COMPANY", '"10"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"TV27001"'
            buildConfigField "String", "CHIHI_TYPE", '"H713_smartTV"'
            buildConfigField "String", "MODEL", '"713_smartTV"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713_SMARTTV}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }

        hongxin_713RK_M_G {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            //signingConfig signingConfigs.hongxin_rk3326
            signingConfig signingConfigs.x88
            versionCode 61  //2025-3-3发布版本号 61
            versionName "1.7.0"     //2025-3-3发布版本名 1.7.0
            manifestPlaceholders = [share_uid: "android.uid.system"]
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "CHANNEL", '"RK3326G"'
            buildConfigField "String", "CHIHI_TYPE", '"3326G"'
            buildConfigField "String", "MODEL", '"3326G"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713RK_M_G}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }

        hongxin_713RK_M {
            applicationId "com.chihihx.launcher"
            dimension "chihi"
            signingConfig signingConfigs.hongxin_rk3326
            //signingConfig signingConfigs.x88
            versionCode 61  //2025-3-3发布版本号 61
            versionName "1.7.0"     //2025-3-3发布版本名 1.7.0
            manifestPlaceholders = [share_uid: "android.uid.system"]
            buildConfigField "String", "BASE_URL", '"https://api.fpxokc.cc/"'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "CHANNEL", '"RK3326M"'
            buildConfigField "String", "CHIHI_TYPE", '"3326M"'
            buildConfigField "String", "MODEL", '"3326M"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713RK_M}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAAMuX2lc/L2t/bcYHAJA1m94KAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://api.y2btop.cc/"'
        }


        //X98K (TV)
        X98K_M {
            applicationId "com.chihim.launcher"
            dimension "chihi"
            versionCode 6  //2025-3-3发布版本号 6
            versionName "1.5.1"     //2025-3-3发布版本 1.5.1
            manifestPlaceholders = [share_uid: "android.uid.system"]
            signingConfig signingConfigs.yxt
            // 自定义buildConfig.java中的变量供代码中使用
            buildConfigField "String", "BASE_URL", '"https://api.svnmo.cc/"'
            buildConfigField "String", "COMPANY", '"3"'
            buildConfigField "String", "APP_ID", '"launcher"'
            buildConfigField "String", "CHANNEL", '"LA23002"'
            buildConfigField "String", "CHIHI_TYPE", '"X98K_M"'
            buildConfigField "String", "MODEL", '"X98K_M"'
            buildConfigField "String", "APPSTORE_APP_ID",'"com.com.chihihx.store"'
            buildConfigField "String", "APPSTORE_APPDETAIL_NAME",'"com.chihihx.store.ui.activity.AppDetailActivity"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_X98K_M}\""
            buildConfigField "String", "MD5_VALUE", '"H4sIAAAAAAAAALPy2KF/xnZrke0CAMcUizsKAAAA"'
            buildConfigField "String", "BACKUP_DOMAIN", '"https://apps.psnapp.org/"'
        }


        hongxin_713_M_G_test {
            applicationId "com.chihihx.launcher_test"
            dimension "chihi"
            //signingConfig signingConfigs.hongxin
            signingConfig signingConfigs.x88
            manifestPlaceholders = [share_uid: "android.uid.system"]
            // 自定义buildConfig.java中的变量供代码中使用
            // buildConfigField "String", "BASE_URL", '""'
            buildConfigField "String", "COMPANY", '"0"'
            buildConfigField "String", "CHANNEL", '"TE27001"'
            buildConfigField "String", "CHIHI_TYPE", '"H713M_Test"'
            buildConfigField "String", "MODEL", '"713M_Test"'
            buildConfigField "String", "FLAVOR_NAME", "\"${FLAVOR_NAME_LAUNCHER_713_TEST}\""
            buildConfigField "String", "MD5_VALUE", '"AS21001"'
            buildConfigField "String", "BACKUP_DOMAIN", '"AS21001"'
        }



    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
        compose false
        dataBinding = true
        viewBinding = true
    }


    kotlinOptions {
        jvmTarget = '17'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

task assembleX10_X30_X50Release {
    dependsOn 'assembleHongxin_713_M_G_2xRelease',
            'assembleHongxin_713_M_G_X10Release',
            'assembleX50_713MRelease'
    description 'Assemble Release builds for x10 and x30 and x50 flavors'
}

configurations.all {
    resolutionStrategy {
        // 强制使用特定版本的 Fragment
        force "androidx.fragment:fragment:1.5.4"
        force "androidx.appcompat:appcompat:1.7.0"
        force "androidx.core:core-ktx:1.13.0"
        force "androidx.activity:activity:1.7.0"
    }
}

dependencies {
    implementation files(
            'libs/system.jar',
            'libs/softwinner.keystone.jar',
    )

    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'androidx.leanback:leanback-preference:1.0.0'


    //这个是让注解生效的
    kapt 'com.github.bumptech.glide:compiler:4.16.0'

    api project(path: ':baselibrary:lib_base')

}

def getTime() {
    return new Date().format("yyyyMMdd_HHmm", TimeZone.getDefault())
}

static String getBuildConfigFieldValue(def variant, def fiedName) {
    def properties = variant.productFlavors[0].properties
    def name = properties.get("name")
    if (name != variant.flavorName) {
        return ""
    }
    def configs = properties.get("buildConfigFields")
    def address = null
    for (Map.Entry<String, Object> item : configs) {
        def key = item.key
        if (key == fiedName) {
            address = item.value
        }
    }
    if (address == null) return ""
    def field = address.getClass().getDeclaredField("value")
    field.setAccessible(true)
    return field.get(address)
}