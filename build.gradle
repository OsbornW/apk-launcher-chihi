import com.google.gson.Gson

import java.nio.charset.StandardCharsets

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.24' apply false
}

gradle.buildFinished {
    project('app') {
        try {
            Gson gson = new Gson()

            def buildField = it.android.defaultConfig
            Map<String, String> data = new HashMap<>();
            data.put("packageName", buildField.applicationId);
            data.put("versionName", buildField.versionName);
            data.put("version", buildField.versionCode);
            data.put("appId", buildField.manifestPlaceholders.appId);
            data.put("channel", buildField.manifestPlaceholders.channel);
            data.put("chihi_type", buildField.manifestPlaceholders.chihi_type);
            data.put("model", buildField.manifestPlaceholders.model);

            android.applicationVariants.all { variant ->
                if (variant.buildType.name == 'release') {
                    def fileName = "readme.json"

                    def projectDir = project.rootDir
                    def buildPath = new File(projectDir, "app/" + variant.buildType.name)
                    createPath(buildPath)
                    def dstFile = new File(buildPath, "/" + fileName)

                    FileOutputStream fos = new FileOutputStream(dstFile)
                    def json = gson.toJson(data)
                    fos.write(json.getBytes(StandardCharsets.UTF_8));
                    fos.close();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

def createPath(file) {
    if (!file.exists()) {
        file.mkdirs();
    }
}

